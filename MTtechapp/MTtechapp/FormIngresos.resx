<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAJcEhZcwAACxMAAAsTAQCanBgAAA1sSURBVHhe7d0JsH/lHMfxtGiT
        QplK06Ym2aWEylZMjZgxjGjGOoyZUoxcxjItktGCUUPKMJNikkJosUfLZPpnC4kwtr+IaBMiPp90+9+5
        ve+9Z/s95znP823mNcPnf+9zzvme5/5+Z3nOc9aam5sLoVoYhlALDEOoBYYh1ALDEGqBYQi1wDCEWmAY
        Qi0wDKEWGIZQCwxDqAWGIdQCwxBqgWEItcAwhFpgGEItMAyhFhiGUAsMQ6gFhiHUAsMQaoFhCLXAMIRa
        YBhCLTAMoRYYhlALDEOoBYYh1ALDEGqBYQi1wDCEWmAYQi0wDL3cT3aUA+Uweb98Rr4lP5LV8je5Q/5z
        D/9vZ/43/8wl4t95n7xenis7iNumZU7V0ZAlhWFoZRs5SD4oV8it8t8ZuVkukw/Ii2QroXWaAnd+bxP9
        WzIYhmWtLweIO/zPZHEnTe1a8bfMfrKe0DrnZr7zG/17MhiG+3DHep6cKf4UXtgBc3KTfEyeI+sIbcvY
        FnZ+o59JBsNwr53lBPmjLNxpU/A7eZdsK7RtYzhGFq8n/VwyGIa5feUiuUsW77Cp8Un2efJkoW1NhTq/
        0c8mg2HFXiDfE9pRJbhUfK5A2z5LS3V+o59PBsMK7S+rhHZQiXyZdS+hWgxtuc5v9DvJYFiRXcWHOrRj
        avBpmeU5wkqd3+j3ksGwAhvJiXKn0E6pyd/lHbKuUK268gk4LW8x+t1kMCycT3B/IbQzavYD2V2oZm01
        7fxGv58MhoXaQE6WEq7szIq/EY+UPvcQ2nR+ozaSwbBAj5ZrhHZAuC9fLepybtC28xu1kwyGhXmJ3CZU
        /LC0G6XNJdMund+orWQwLMTacpJQ0UMz/xb/R/Vd6Fih32+C2ksGwwL4Ks/5QgUP7Z0uS10l6tP5jdpM
        BsOJ20KuEip2Sh7f/x35hPgyo4cvezjCo2Q7ebDcX3zCueE9/38n8c/4Z/2fO96VcrvQMlK6WDaWhbXu
        2/ltYXvJYThhW4uHB1OhZ+2v8nk5XB4jQz684j+S3cRtf0HG+oO4XDYVr9MQnd8Wb2tSGE6Ur1pcL1Tk
        WfHw41PFwwp8zkHrNQu+pOsnzs6SWT6AQ66WIc+taPuSwXCC/GRUqs7v0ZX+FH6h+OEYWp+UfFjyGnHH
        pPXNHW1TMhhOzObyY6HiDsk3ic6QRwitRw6eIRcKrX+uaDuSwXBCfPLok0Qq7FDc8T8ifiid1iFHPpH+
        htD25IbWPxkMJ8LH3H7Qg4o6FM/k4Ks2tPwpeL6kPi9qi9Y7GQwn4r1CBR3CDfIyoeVOjc9TjpNcR77S
        OieD4QT4BJSKOQTPx7OZ0HKn7AnyE6FtHhOtazIYZm4XuUWomH38Qw4RWmYpfM50mtD2j4XWMxkMM+Y7
        p98VKmQfPxd/QtIyS/Qq8Wx0VIvUaP2SwTBjxwsVsQ/P5uZhCLS8ku0pOUz3QuuWDIaZ8t1W34SiInZ1
        gXjgHC2vBp7DdOzZ7Wi9ksEwQ76SMfQJnAepDf0c7BRtKZ6Ql2qUAq1TMhhmqMnsAm2485c203IfnoWa
        6pQCrU8yGGbGd2B9hYaK14UPe+KTf42hRnV2ReuUDIaZOVeocF34hLfmY/7Fxu78RuuVDIYZ2UeoaF34
        UmeNV3uWkkPnN1q3ZDDMiMfiUNHa8iFUTdf5V5JL5zdav2QwzIRnJKCCdXGo0DJqlFPnN1rHZDDMxFCf
        /ucItV+j3Dq/0Xomg2EG9hAqVlse1VniwLYuus7bM2u0rslgmIGzhYrVVilDmvvKtfMbrW8yGI7Mz/cO
        MXbdh1DUfm1y7vxG65wMhiN7u1Ch2vAf0JSf5BpK7p3faL2TwXBEHp4wxNTlfoaX2q/JFDq/0bong+GI
        hrjx5U//7YXar8VUOr/R+ieD4YhOESpSG566hNquxZQ6v9E2JIPhSDzLw2qhIjXl5wVynrdn1oYeNZsC
        bUcyGI7Ec9lQgdrwjG3Udg2m2PmNtiUZDEey+BX6XXi2CGq7dFPt/EbbkwyGI+k7w5snqvVD89R2yabc
        +Y22KRkMR7CJ+G0kVKCmPEsztV2yqXd+o+1KBsMRPFuoOG2kevN5Lkro/EbblgyGIzhKqDhN+eUUKefn
        H9sQ50u5oO1LBsMRfFGoOE35zSzUbolK6vxG25gMhiP4jVBxmnqDULulKa3zG21nMhgm5vH6VJg2/E4u
        arskJXZ+o21NBsPEniJUmKb8NsbS5/gptfMbbW8yGCZ2sFBhmvKrSKndUpTc+Y22ORkME/M7dKkwTXmW
        N2o3hBVhmJjH7lPHbsp/QNRuCCvCMLHPCnXspvxWdWo3hBVhmFjf6U88ipTaDWFFGCZ2jVDHbiqe/Q2d
        YZhY32eAtxNqN4QVYZjYb4U6dlMx4W3oDMPE+r6nqsZnAMJAMEys73PA8QcQOsMwseuEOnZTcQgUOsMw
        sVVCHbupOAkOnWGY2DeFOnZTcRk0dIZhYp7KhDp2U3EjLHSGYWKfFOrYTcVQiNAZhol9WKhjNxWD4UJn
        GCZ2hFDHbiqGQ4fOMEzsQKGO3VTpD8SEGcIwsZ2FOnZTN0vpj0SGGcEwsXXlX0Kdu6nHCrUdwrIwHMG1
        Qh27qVqmRQkDw3AEntiKOnZT5wu1G8KyMBxB3xfjeWqUdYTaDmFJGI5giJdj7C3UdghLwnAEPhG+Rahj
        N3WaUNshLAnDkVwg1LGb8gzR6wu1HYbzQLlNaB80dZ5Q28lhOJI3CxWrjRgXNHuHCNW+jVcItZ0chiPZ
        TahYbXiadWo7DOf7QrVvym/y3EKo7eQwHInv5v5aqGhN3SWPFGo/9Nd3ImO7XKjtUWA4ovcIFa2NM4Xa
        Dv31PU+ztwq1PQoMR7SrUNHa8Mv2dhRqP3T3RKF6t+Fv6Kz2DYYju0qoeG2cLtR26K7v3Xr7qlDbo8Fw
        ZIcLFa+NO6WGt8ak8iyhOrf1YqH2R4PhyHyFwB2YCtjGpRLDpPvzTcq+87fajZLdHE4YZsBPeVER23ql
        UPuhuSG+ke0kofZHhWEGfDLsEyYqZBt/kgcJLSOszCestwrVtg0/75Hl/E0YZuJcoWK25RdwUPtheR5d
        62v2VNO2Piq0jNFhmIkh7gzP89c4LSMs7W1CtWzL53M7CC1jdBhm5CKhorb1T9ldaBnhvvaVIS5E2MeF
        lpEFDDMyxK33eX4Rx0OElhPW8HH/X4Rq2JaP/R8utJwsYJiZM4SK24WnUNlYaDnh/0Odh7jkOe9EoeVk
        A8PMPFQ81p8K3IUPq9YTWlbNNpRvC9Wsi9/LA4SWlQ0MM3SoUJG7OkviJtkavkF1sVCtunqp0LKygmGG
        1parhQrdlf8I4ptgbm4DGWKcz0Ke8p6WlR0MM/Uk8cMUVPCu/KlX8znBptL3Pc2L3S67CC0vOxhm7Cih
        ovfhE+PNhZZXsq2l79Nd5LVCy8sShhnzodDXhQrfxy9lD6Flluhp8gehWvThu/e0vGxhmLkt5QahHdCH
        b5bVMMXiG2Wom1wL+X3Pkxt3heEE7CdDnw/M+5yU+ObJh8mFQtvclz889hFabtYwnIijhXbGEDx2/dVS
        yqVSb4unj6RtHcJkh51jOBHunEPeJSaXyZSnXvd5jR8Mom0byvFCy54EDCfETysNMVPBcny87OG8WY9p
        WWR78csHh3imYjkeaj7pb0kMJ2YjuVJoBw3Js024U+U879DjxOs4i5Pcxfzt6NrTekwGhhPkUZ59X7LR
        lD9V/a3jB7x9F5XWJyXPh+p1+bLQ+s6CO3/243yawHCitpFUfwTzfGLpwyNfV0/5fgIP4XimnCo3Ca3b
        rPgpsU2E1mtyMJwwfxP4zi7tuFnzy/q+JG+Sx8uQx8Y+13GbrxNfpu07lXxXV0gxnd8wnDiP7Rl6ZGMX
        7qSrxMfkR8pBspf4qpIfEfTwCx+++NN8M/HQhJ3EP3Ow+JFEv/PA5zd3CC0jJU88XNy4KQwL4E7ljkc7
        MrR3sngYCtV60jAshA9BjpNZXwosma98HSZU3yJgWJgDxHd2aQeHpblmrh3VtBgYFsjjYGZ9R7QkXxOf
        k1Ati4JhoXyZ0u8fiEOipXkWh7dIKWOgVoRh4TxqcciZD0rhh2NqeibibhhWwNfVj5Ah5r2cOt+/8HMQ
        Vb5oHMOK+NzgHKGOUYNPyVZCtakChhXyCyCGfjg8Z1+RpwrVoioYVmxvyeEu8qxEx18Ew3D3RLoec1PC
        FSNf2fFhXnR8gGG4lx8seadcJ9S5cna9+JWknlqSti0IhgHtKR+SPwt1uBysFr8h05MGVHMtvw8Mw7I8
        j6bH4h8rHhvvQwzqjKn8UN4tnjkvOn1LGIZW/GTU/nKC+ErSLOYsmueHX3ySfox4nE6876AnDENvHt/v
        Q6aXi0ekni3uuP7G8Cf2r8SHUp5Px98g7tieWOqn4kmALxG/KdMd3VOOPF22lfiEHxiGIdQCwxBqgWEI
        tcAwhFpgGEItMAyhFhiGUAsMQ6gFhiHUAsMQaoFhCLXAMIRaYBhCLTAMoRYYhlALDEOoBYYh1ALDEGqB
        YQi1wDCEWmAYQi0wDKEWGIZQCwxDqAWGIdQCwxBqgWEItcAwhFpgGEItMAyhFhiGUAsMQ6jD3Fr/Ax24
        t16gebyLAAAAAElFTkSuQmCC
</value>
  </data>
</root>